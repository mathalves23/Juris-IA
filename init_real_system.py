#!/usr/bin/env python3
"""
Script para inicializar o sistema JurisIA com dados reais
Cria banco de dados, usu√°rio administrador e dados de exemplo
"""

import os
import sys
from datetime import datetime, timedelta

# Adicionar o diret√≥rio atual ao Python path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# Mudar para o diret√≥rio do projeto
os.chdir(os.path.dirname(os.path.abspath(__file__)))

# Importar Flask app e extens√µes
from src.main import create_app
from src.extensions import db
from src.models.user import User
from src.models.document import Document
from src.models.template import Template
from src.models.subscription import Subscription
from flask_bcrypt import Bcrypt

def init_database():
    """Inicializa o banco de dados"""
    print("üóÑÔ∏è Inicializando banco de dados...")
    
    app = create_app()
    bcrypt = Bcrypt(app)
    
    with app.app_context():
        # Criar todas as tabelas
        db.create_all()
        print("‚úÖ Tabelas criadas com sucesso")
        
        # Verificar se j√° existe usu√°rio admin
        admin_user = User.query.filter_by(email='admin@jurisia.com').first()
        
        if not admin_user:
            # Criar usu√°rio administrador
            admin_password = bcrypt.generate_password_hash('admin123').decode('utf-8')
            admin_user = User(
                nome='Administrador JurisIA',
                email='admin@jurisia.com',
                senha=admin_password,
                telefone='(11) 99999-9999',
                oab='123456/SP',
                is_admin=True,
                email_verified=True
            )
            db.session.add(admin_user)
            print("‚úÖ Usu√°rio administrador criado (admin@jurisia.com / admin123)")
        else:
            print("‚ÑπÔ∏è Usu√°rio administrador j√° existe")
        
        # Criar usu√°rio de teste
        test_user = User.query.filter_by(email='advogado@jurisia.com').first()
        
        if not test_user:
            test_password = bcrypt.generate_password_hash('123456').decode('utf-8')
            test_user = User(
                nome='Dr. Jo√£o Silva',
                email='advogado@jurisia.com',
                senha=test_password,
                telefone='(11) 98765-4321',
                oab='654321/SP',
                email_verified=True
            )
            db.session.add(test_user)
            print("‚úÖ Usu√°rio de teste criado (advogado@jurisia.com / 123456)")
        else:
            print("‚ÑπÔ∏è Usu√°rio de teste j√° existe")
        
        # Commit usu√°rios primeiro
        db.session.commit()
        
        # Criar documentos de exemplo
        create_sample_documents(test_user.id)
        
        # Criar templates de exemplo
        create_sample_templates(test_user.id)
        
        # Criar assinatura para o usu√°rio de teste
        create_sample_subscription(test_user.id)
        
        # Commit final
        db.session.commit()
        print("üéâ Sistema inicializado com sucesso!")
        
        # Mostrar informa√ß√µes de login
        print("\nüìã INFORMA√á√ïES DE LOGIN:")
        print("=" * 50)
        print("üîê Administrador:")
        print("   Email: admin@jurisia.com")
        print("   Senha: admin123")
        print("\nüë§ Usu√°rio de Teste:")
        print("   Email: advogado@jurisia.com")
        print("   Senha: 123456")
        print("=" * 50)

def create_sample_documents(user_id):
    """Cria documentos de exemplo"""
    print("üìÑ Criando documentos de exemplo...")
    
    # Verificar se j√° existem documentos
    if Document.query.filter_by(usuario_id=user_id).count() > 0:
        print("‚ÑπÔ∏è Documentos j√° existem")
        return
    
    documents = [
        {
            'titulo': 'Contrato de Presta√ß√£o de Servi√ßos',
            'conteudo': '''<h2>CONTRATO DE PRESTA√á√ÉO DE SERVI√áOS</h2>
            
<p><strong>CONTRATANTE:</strong> {{nome_contratante}}, {{qualificacao_contratante}}</p>
<p><strong>CONTRATADO:</strong> {{nome_contratado}}, {{qualificacao_contratado}}</p>

<h3>1. DO OBJETO</h3>
<p>O presente contrato tem por objeto a presta√ß√£o de servi√ßos de {{tipo_servico}}, conforme especifica√ß√µes detalhadas no Anexo I.</p>

<h3>2. DO VALOR E FORMA DE PAGAMENTO</h3>
<p>O valor total dos servi√ßos √© de R$ {{valor_total}}, a ser pago da seguinte forma: {{forma_pagamento}}.</p>

<h3>3. DO PRAZO</h3>
<p>O prazo para execu√ß√£o dos servi√ßos √© de {{prazo_execucao}}, iniciando-se em {{data_inicio}}.</p>

<h3>4. DAS OBRIGA√á√ïES</h3>
<p>S√£o obriga√ß√µes do CONTRATADO:</p>
<ul>
<li>Executar os servi√ßos com qualidade e pontualidade;</li>
<li>Manter sigilo sobre informa√ß√µes confidenciais;</li>
<li>Cumprir os prazos estabelecidos.</li>
</ul>

<p>S√£o obriga√ß√µes do CONTRATANTE:</p>
<ul>
<li>Efetuar os pagamentos nas datas estabelecidas;</li>
<li>Fornecer informa√ß√µes necess√°rias para execu√ß√£o dos servi√ßos;</li>
<li>Disponibilizar recursos conforme acordado.</li>
</ul>

<h3>5. FORO</h3>
<p>Fica eleito o foro de {{cidade_foro}} para dirimir quaisquer quest√µes oriundas do presente contrato.</p>

<p>{{cidade}}, {{data_assinatura}}</p>

<p>_________________________<br>
{{nome_contratante}}<br>
CONTRATANTE</p>

<p>_________________________<br>
{{nome_contratado}}<br>
CONTRATADO</p>''',
            'status': 'Rascunho'
        },
        {
            'titulo': 'Peti√ß√£o Inicial - A√ß√£o de Cobran√ßa',
            'conteudo': '''<h2>PETI√á√ÉO INICIAL</h2>
            
<p>Excelent√≠ssimo Senhor Doutor Juiz de Direito da {{vara}} Vara C√≠vel da Comarca de {{comarca}}.</p>

<p><strong>{{nome_autor}}</strong>, {{qualificacao_autor}}, vem, respeitosamente, perante Vossa Excel√™ncia, por meio de seu advogado signat√°rio, propor a presente</p>

<h3 style="text-align: center;"><strong>A√á√ÉO DE COBRAN√áA</strong></h3>

<p>em face de <strong>{{nome_reu}}</strong>, {{qualificacao_reu}}, pelos fatos e fundamentos jur√≠dicos a seguir expostos:</p>

<h3>I - DOS FATOS</h3>
<p>1. O Requerente celebrou com o Requerido {{tipo_contrato}} em {{data_contrato}}, conforme documento anexo.</p>

<p>2. O valor total do d√©bito √© de R$ {{valor_divida}}, vencido em {{data_vencimento}}.</p>

<p>3. O Requerido foi devidamente notificado para pagamento, por√©m quedou-se inerte.</p>

<h3>II - DO DIREITO</h3>
<p>4. O art. 389 do C√≥digo Civil estabelece que n√£o cumprida a obriga√ß√£o, responde o devedor por perdas e danos.</p>

<p>5. A mora do devedor est√° caracterizada pelo vencimento da obriga√ß√£o, conforme art. 397 do CC.</p>

<h3>III - DOS PEDIDOS</h3>
<p>Ante o exposto, requer:</p>
<ol>
<li>A cita√ß√£o do requerido para pagar a d√≠vida ou contestar a a√ß√£o;</li>
<li>A condena√ß√£o ao pagamento de R$ {{valor_divida}}, com corre√ß√£o e juros;</li>
<li>A condena√ß√£o nas custas e honor√°rios advocat√≠cios.</li>
</ol>

<p>D√°-se √† causa o valor de R$ {{valor_causa}}.</p>

<p>Termos em que pede deferimento.</p>

<p>{{cidade}}, {{data_peticao}}.</p>

<p>_________________________<br>
{{nome_advogado}}<br>
OAB/{{estado}} {{numero_oab}}</p>''',
            'status': 'Em Revis√£o'
        },
        {
            'titulo': 'Parecer Jur√≠dico - An√°lise Contratual',
            'conteudo': '''<h2>PARECER JUR√çDICO</h2>

<p><strong>Consulente:</strong> {{nome_consulente}}</p>
<p><strong>Objeto:</strong> An√°lise de {{objeto_parecer}}</p>
<p><strong>Data:</strong> {{data_parecer}}</p>

<h3>1. RELAT√ìRIO</h3>
<p>Trata-se de consulta formulada por {{nome_consulente}} acerca de {{questao_juridica}}.</p>

<p>A consulta versa sobre {{detalhamento_questao}}, conforme documenta√ß√£o anexa.</p>

<h3>2. FUNDAMENTA√á√ÉO LEGAL</h3>
<p>A quest√£o encontra respaldo na legisla√ß√£o brasileira, especificamente:</p>
<ul>
<li>{{lei_aplicavel_1}}</li>
<li>{{lei_aplicavel_2}}</li>
<li>{{jurisprudencia_aplicavel}}</li>
</ul>

<h3>3. AN√ÅLISE JUR√çDICA</h3>
<p>Da an√°lise dos documentos e da legisla√ß√£o aplic√°vel, verifica-se que {{analise_principal}}.</p>

<p>Os riscos identificados s√£o: {{riscos_identificados}}.</p>

<p>As oportunidades identificadas s√£o: {{oportunidades}}.</p>

<h3>4. CONCLUS√ÉO</h3>
<p>Com base no exposto, opina-se que {{conclusao_parecer}}.</p>

<p>Recomenda-se {{recomendacoes}}.</p>

<p>√â o parecer, s.m.j.</p>

<p>{{cidade}}, {{data_parecer}}.</p>

<p>_________________________<br>
{{nome_advogado}}<br>
OAB/{{estado}} {{numero_oab}}</p>''',
            'status': 'Finalizado'
        }
    ]
    
    for doc_data in documents:
        document = Document(
            titulo=doc_data['titulo'],
            conteudo=doc_data['conteudo'],
            status=doc_data['status'],
            usuario_id=user_id,
            data_criacao=datetime.utcnow(),
            data_atualizacao=datetime.utcnow()
        )
        db.session.add(document)
    
    print("‚úÖ Documentos de exemplo criados")

def create_sample_templates(user_id):
    """Cria templates de exemplo"""
    print("üìã Criando templates de exemplo...")
    
    # Verificar se j√° existem templates
    if Template.query.filter_by(usuario_id=user_id).count() > 0:
        print("‚ÑπÔ∏è Templates j√° existem")
        return
    
    templates = [
        {
            'nome': 'Contrato de Loca√ß√£o Residencial',
            'categoria': 'Contratos',
            'conteudo': '''<h2>CONTRATO DE LOCA√á√ÉO RESIDENCIAL</h2>

<p><strong>LOCADOR:</strong> {{nome_locador}}, {{qualificacao_locador}}</p>
<p><strong>LOCAT√ÅRIO:</strong> {{nome_locatario}}, {{qualificacao_locatario}}</p>

<h3>CL√ÅUSULA 1¬™ - DO OBJETO</h3>
<p>O LOCADOR d√° em loca√ß√£o ao LOCAT√ÅRIO o im√≥vel situado na {{endereco_imovel}}.</p>

<h3>CL√ÅUSULA 2¬™ - DO PRAZO</h3>
<p>A loca√ß√£o √© por prazo determinado de {{prazo_locacao}}, com in√≠cio em {{data_inicio}}.</p>

<h3>CL√ÅUSULA 3¬™ - DO ALUGUEL</h3>
<p>O valor mensal do aluguel √© de R$ {{valor_aluguel}}, venc√≠vel todo dia {{dia_vencimento}}.</p>

<h3>CL√ÅUSULA 4¬™ - DO DEP√ìSITO CAU√á√ÉO</h3>
<p>O LOCAT√ÅRIO depositar√° a quantia de R$ {{valor_caucao}} como garantia.</p>''',
            'variaveis': {
                'nome_locador': '',
                'nome_locatario': '',
                'endereco_imovel': '',
                'prazo_locacao': '',
                'valor_aluguel': '',
                'dia_vencimento': '',
                'valor_caucao': ''
            }
        },
        {
            'nome': 'Procura√ß√£o Ad Judicia',
            'categoria': 'Procura√ß√µes',
            'conteudo': '''<h2>PROCURA√á√ÉO</h2>

<p><strong>OUTORGANTE:</strong> {{nome_outorgante}}, {{qualificacao_outorgante}}</p>

<p><strong>OUTORGADO:</strong> {{nome_outorgado}}, {{qualificacao_outorgado}}, inscrito na OAB/{{estado}} sob o n¬∫ {{numero_oab}}</p>

<p>Por este instrumento particular de procura√ß√£o, o OUTORGANTE nomeia e constitui seu bastante procurador o OUTORGADO, para represent√°-lo perante {{orgaos_representacao}}, podendo:</p>

<ul>
<li>Propor a√ß√µes e defend√™-lo em ju√≠zo;</li>
<li>Transigir, acordar e desistir;</li>
<li>Substabelecer esta procura√ß√£o;</li>
<li>Praticar todos os atos necess√°rios ao bom desempenho do mandato.</li>
</ul>

<p>{{cidade}}, {{data_procuracao}}.</p>

<p>_________________________<br>
{{nome_outorgante}}<br>
OUTORGANTE</p>''',
            'variaveis': {
                'nome_outorgante': '',
                'qualificacao_outorgante': '',
                'nome_outorgado': '',
                'qualificacao_outorgado': '',
                'estado': '',
                'numero_oab': '',
                'orgaos_representacao': '',
                'cidade': '',
                'data_procuracao': ''
            }
        }
    ]
    
    for template_data in templates:
        template = Template(
            nome=template_data['nome'],
            categoria=template_data['categoria'],
            conteudo=template_data['conteudo'],
            variaveis=template_data.get('variaveis', {}),
            usuario_id=user_id,
            data_criacao=datetime.utcnow()
        )
        db.session.add(template)
    
    print("‚úÖ Templates de exemplo criados")

def create_sample_subscription(user_id):
    """Cria assinatura de exemplo"""
    print("üí≥ Criando assinatura de exemplo...")
    
    # Verificar se j√° existe assinatura
    if Subscription.query.filter_by(user_id=user_id).first():
        print("‚ÑπÔ∏è Assinatura j√° existe")
        return
    
    subscription = Subscription(
        user_id=user_id,
        plan_type='premium',
        status='active',
        start_date=datetime.utcnow(),
        end_date=datetime.utcnow() + timedelta(days=365),  # 1 ano
        auto_renew=True
    )
    db.session.add(subscription)
    print("‚úÖ Assinatura premium criada (1 ano)")

if __name__ == '__main__':
    try:
        print("üöÄ Iniciando configura√ß√£o do sistema JurisIA...")
        init_database()
        print("\nüéØ Sistema pronto para uso!")
        print("\nüåê Para iniciar o backend:")
        print("   python main.py")
        print("\nüåê Para iniciar o frontend:")
        print("   cd frontend && npm start")
        
    except Exception as e:
        print(f"‚ùå Erro ao inicializar sistema: {e}")
        sys.exit(1) 