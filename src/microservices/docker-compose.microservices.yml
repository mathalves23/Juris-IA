version: '3.8'

services:
  # Nginx Load Balancer
  nginx:
    image: nginx:alpine
    container_name: jurissaas_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./static:/var/www/static
    depends_on:
      - auth-service
      - document-service
      - ai-service
    networks:
      - jurissaas-network

  # Redis Message Queue & Cache
  redis:
    image: redis:7-alpine
    container_name: jurissaas_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 512mb
    networks:
      - jurissaas-network

  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: jurissaas_postgres
    environment:
      POSTGRES_DB: jurissaas
      POSTGRES_USER: jurissaas
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - jurissaas-network

  # Authentication Service
  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: jurissaas_auth
    environment:
      - DATABASE_URL=postgresql://jurissaas:${POSTGRES_PASSWORD}@postgres:5432/jurissaas
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - postgres
      - redis
    networks:
      - jurissaas-network
    deploy:
      replicas: 2

  # Document Management Service
  document-service:
    build:
      context: ./services/documents
      dockerfile: Dockerfile
    container_name: jurissaas_documents
    environment:
      - DATABASE_URL=postgresql://jurissaas:${POSTGRES_PASSWORD}@postgres:5432/jurissaas
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:5000
    volumes:
      - document_storage:/app/storage
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - jurissaas-network
    deploy:
      replicas: 3

  # AI Services
  ai-service:
    build:
      context: ./services/ai
      dockerfile: Dockerfile
    container_name: jurissaas_ai
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AUTH_SERVICE_URL=http://auth-service:5000
    depends_on:
      - redis
      - auth-service
    networks:
      - jurissaas-network
    deploy:
      replicas: 2

  # Template Service
  template-service:
    build:
      context: ./services/templates
      dockerfile: Dockerfile
    container_name: jurissaas_templates
    environment:
      - DATABASE_URL=postgresql://jurissaas:${POSTGRES_PASSWORD}@postgres:5432/jurissaas
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:5000
    depends_on:
      - postgres
      - redis
      - auth-service
    networks:
      - jurissaas-network

  # Analytics Service
  analytics-service:
    build:
      context: ./services/analytics
      dockerfile: Dockerfile
    container_name: jurissaas_analytics
    environment:
      - DATABASE_URL=postgresql://jurissaas:${POSTGRES_PASSWORD}@postgres:5432/jurissaas
      - REDIS_URL=redis://redis:6379
      - CLICKHOUSE_URL=http://clickhouse:8123
    depends_on:
      - postgres
      - redis
      - clickhouse
    networks:
      - jurissaas-network

  # ClickHouse for Analytics
  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: jurissaas_clickhouse
    ports:
      - "8123:8123"
    volumes:
      - clickhouse_data:/var/lib/clickhouse
    networks:
      - jurissaas-network

  # Message Queue Worker
  queue-worker:
    build:
      context: ./services/queue
      dockerfile: Dockerfile
    container_name: jurissaas_worker
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://jurissaas:${POSTGRES_PASSWORD}@postgres:5432/jurissaas
    depends_on:
      - redis
      - postgres
    networks:
      - jurissaas-network
    deploy:
      replicas: 3

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: jurissaas_frontend
    environment:
      - REACT_APP_API_URL=https://api.jurissaas.com
      - REACT_APP_CDN_URL=https://cdn.jurissaas.com
    networks:
      - jurissaas-network

  # Monitoring
  prometheus:
    image: prom/prometheus
    container_name: jurissaas_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - jurissaas-network

  grafana:
    image: grafana/grafana
    container_name: jurissaas_grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - jurissaas-network

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  prometheus_data:
  grafana_data:
  document_storage:

networks:
  jurissaas-network:
    driver: bridge 